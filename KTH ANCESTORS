class TreeAncestor {
public:
    vector<vector<int>>up;
    int LOG;
    TreeAncestor(int n, vector<int>& parent){
        LOG=0;
        while((1<<LOG)<=n){
            LOG++;
        }
        up=vector<vector<int>>(n,vector<int>(LOG+1,0));
        for(int i=0;i<n;i++){
            up[i][0]=parent[i];
        }
        for(int lg=1;lg<=LOG;lg++){
            for(int i=0;i<n;i++){
                if(up[i][lg-1]!=-1){
                    up[i][lg]=up[up[i][lg-1]][lg-1];
                }
                else{
                    up[i][lg]=-1;
                }
            }
        }
    }
    int getKthAncestor(int node, int k) {
        for(int j=0;j<=LOG;j++){
            if(k&(1<<j)){
                node=up[node][j];
                if(node==-1) 
                    return -1;
            }
        }
        return node;
    }
};

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor* obj = new TreeAncestor(n, parent);
 * int param_1 = obj->getKthAncestor(node,k);
 */
