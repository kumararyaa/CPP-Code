//select kth largest or kth smallest element in avergae time complexity O(N) and worst case O(N2);

class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        int n=nums.size();
        int pivot=nums[rand() % nums.size()];
        vector<int>left,mid,right;
        for(int i=0;i<n;i++){
            if(nums[i]<pivot) right.push_back(nums[i]);
            else if(nums[i]>pivot) left.push_back(nums[i]);
            else mid.push_back(nums[i]);
        }
        if(k<=left.size()) return findKthLargest(left,k);
        else if(left.size()+mid.size()<k) return findKthLargest(right,k-(left.size()+mid.size()));
        return pivot;
    }
};
